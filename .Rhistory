system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
system("website/deploy.sh")
knit_with_parameters('~/vim/konradpabianczyk/blog/_posts_knitr/2016-01-25-using-sparkline-in-R-projects.Rmd')
read.csv(file="activity.csv")
read.csv(file="documents/activity.csv")
view(df)
#taking the average of a single day
sum(data.interval)
#taking the average of a single day
colSums(steps[,])
#taking the average of a single day
print.c(steps)
## loading dataset
steps <- read.csv(file="documents/activity.csv")
print(colSums(steps[1]))
print(colSums(step_total[1]))
## loading dataset
read.csv(file="documents/activity.csv")
print(colSums(steps[1]))
View(steps)
##print(colSums(steps[1]))
##print(colSums(steps[1]))
## loading dataset
df <- read.csv(file="documents/activity.csv")
print(colSums(df.steps[1]))
print(colSums(df[1]))
replace(df, indices_of_NAs, "NULL")
## taking the average of a single day
print(colSums(df[1]))
taking the average of a single day
##
# loading dataset
df <- read.csv(file="documents/activity.csv")
View(df)
View(df)
View(df)
View(df)
# indicies of N/A named
NAs <- df == "#NA"
View(NAs)
View(df)
View(df)
View(NAs)
# replace N/A with 0's
is.na(df)[NAs] <- 0
# replace N/A with 0's
is.na(df)[NAs] <- TRUE
View(df)
View(NAs)
# replace N/A with 0's
df[is.na(df)] <- 0
View(df)
# loading dataset
df <- read.csv(file="documents/activity.csv")
# taking the average of a single day
print(colSums(df[1]))
# taking the average of a single day
print(colSums(df[,1]))
# taking the average of a single day
print(colSums(df[1,]))
# taking the average of a single day
print(colSums(df[]))
# taking the average of a single day
print(colSums(df))
# taking the average of a single day
print(colSums[,-1])
# taking the average of a single day
print(colSums()[,-1])
# taking the average of a single day
print(colSums)
View(df)
# taking the average of a single day
group_by(ID, grp = lag(cumsum(WeekDay == "date"), default = 0)) %>%
summarise(Var = sum(Var, na.rm = TRUE)) %>%
ungroup() %>%
View(df)
aggregate(energy$value, by=list(energy$Date), sum)
aggregate(df$value, by=list(energy$Date), sum)
# taking the average of a single day
df$Date <- as.Date(energy$Datetime)
aggregate(df$value, by=list(dfy$Date), sum)
# taking the average of a single day
group_by(date, hour) %>%
install.package('dplyr')
# taking the average of a single day
group_by(date, hour) %>%
View(df)
# taking the average of a single day
group_by(date, hour)
aggregate(energy$value, by=list(energy$Date), sum)
View(df)
View(NAs)
taking the average of a single day
# df$Date <- as.Date(energy$Datetime)
#
View(df)
View(df)
# replace N/A with 0's
stepdata[is.na(df)] <- 0
# replace N/A with 0's
stepdata[is.na(stepdata)] <- 0
View(steps)
View(NAs)
View(df)
df %>% group_by(date) %>% summarise(sum_steps = sum(steps))
library(dplyr)
library(magrittr)
# loading dataset
df <- read.csv(file="documents/activity.csv")
df %>% group_by(date) %>% summarise(sum_steps = sum(steps))
library(dplyr)
source('~/.active-rstudio-document')
library(dplyr)
library(magrittr)
# loading dataset
df <- read.csv(file="documents/activity.csv")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(df_summary)
df_summary = df %>%
group_by(date) %>%
summarise(
sum_steps = sum(steps),
mean_steps = mean(steps),
median_steps = median(steps))
View(df_summary)
# Barplot
hist(df_summary$sum_steps)
print(df_summary)
View(df_summary)
View(df)
View(df_summary)
df_summary = df %>%
group_by(date) %>%
summarise(
sum_steps = sum(steps),
mean_steps = mean(steps),
median_steps = median(steps))
summary(df_summary$median_steps)
# Barplot
hist(df_summary$sum_steps)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
# Histogram
hist(df_summary$sum_steps, breaks =c(0, 5000, 10000, 15000, 20000, 25000))
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
# Histogram
hist(df_summary$sum_steps, breaks = c(0, 1, 5000, 10000, 15000, 20000, 25000))
# Histogram
hist(df_summary$sum_steps, breaks = c(0, 10, 5000, 10000, 15000, 20000, 25000))
# Histogram
hist(df_summary$sum_steps, breaks = c(0, 1000, 5000, 10000, 15000, 20000, 25000))
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
# Histogram
hist(df_summary$sum_steps, breaks = c(1, 5000, 10000, 15000, 20000, 25000))
# Histogram
hist(df_summary$sum_steps, breaks = 30)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
df_summary_interval = df %>%
group_by(interval) %>%
summarise(mean_steps = mean(steps, na.rm =  TRUE))
View(df_summary_interval)
plot(df_summary_interval$interval, df_summary_interval$mean_steps)
plot(df_summary_interval$interval, df_summary_interval$mean_steps, type = "l")
View(df)
plot(df_summary_interval$interval, df_summary_interval$mean_steps, type = "l", xaxt = "n")
axis(side = 1, at = c(0, 400, 800, 1200, 1600, 2000, 2400))
plot(df_summary_interval$interval, df_summary_interval$mean_steps, type = "l", xaxt = "n")
axis(side = 1,
at = c(0, 400, 800, 1200, 1600, 2000, 2400),
labels = c("00:00", "4:00", "8:00", "12:00","16:00","20:00","24:00" ))
df_summary_interval = df %>%
group_by(interval) %>%
summarise(
total_steps = sum(steps, na.rm = TRUE),
mean_steps = mean(steps, na.rm =  TRUE))
plot(df_summary_interval$interval, df_summary_interval$mean_steps, type = "l", xaxt = "n")
axis(side = 1,
at = c(0, 400, 800, 1200, 1600, 2000, 2400),
labels = c("00:00", "4:00", "8:00", "12:00","16:00","20:00","24:00" ))
which.max(df_summary_interval$total_steps)
which.max(df_summary_interval$total_steps) %>% df_summary_interval$interval[.]
is.na(df$steps) %>% sum
print(number_NA)
number_NA = is.na(df$steps) %>% sum
print(number_NA)
df[is.na(df$steps), ]
df[is.na(df$steps), ]$steps <- mean(df$steps,na.rm = TRUE)
View(df)
#install.packages('dplyr')
library(dplyr)
library(magrittr)
# loading dataset
df <- read.csv(file="documents/activity.csv")
# Take the summary, mean and median of unprocessed data
df_summary = df %>%
group_by(date) %>%
summarise(
sum_steps = sum(steps, na.rm =  TRUE),
mean_steps = mean(steps, na.rm =  TRUE),
median_steps = median(steps, na.rm =  TRUE))
# Histogram
hist(df_summary$sum_steps)
# Histogram with breaks for increased visibility
hist(df_summary$sum_steps, breaks = 30)
# display results
print(df_summary)
# Time series for intervals
df_summary_interval = df %>%
group_by(interval) %>%
summarise(
total_steps = sum(steps, na.rm = TRUE),
mean_steps = mean(steps, na.rm =  TRUE))
plot(df_summary_interval$interval, df_summary_interval$mean_steps, type = "l", xaxt = "n")
axis(side = 1,
at = c(0, 400, 800, 1200, 1600, 2000, 2400),
labels = c("00:00", "4:00", "8:00", "12:00","16:00","20:00","24:00" ))
# Max steps
max_step = which.max(df_summary_interval$total_steps) %>% df_summary_interval$interval[.]
print(max_step)
# Calculate and print # of NA's
number_NA = is.na(df$steps) %>% sum
print(number_NA)
df_wo_na <- df
df_wo_na[is.na(df$steps), ]$steps <- mean(df$steps,na.rm = TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
View(df_wo_na)
as.Date(df_wo_na$date, format = "%Y%m%d")
as.Date(df_wo_na$date, format = "%Y-%m-%d")
as.POSIXlt(as.Date(df_wo_na$date, format = "%Y-%m-%d"))$wday
ifelse(as.POSIXlt(as.Date(df_wo_na$date, format = "%Y-%m-%d"))$wday %in% 6:7, "weekend", "weekday")
df_wo_na$day_of_week = ifelse(as.POSIXlt(as.Date(df_wo_na$date, format = "%Y-%m-%d"))$wday %in% 6:7, "weekend", "weekday")
View(df_wo_na)
# kernel density plots by factor level
densityplot(~df_wo_na$interval|df_wo_na$day_of_week,
main="Density Plot by day of week",
xlab="intercal")
library(lattice)
# kernel density plots by factor level
densityplot(~df_wo_na$interval|df_wo_na$day_of_week,
main="Density Plot by day of week",
xlab="intercal")
# kernel density plots by factor level
densityplot(~df_wo_na$interval|df_wo_na$day_of_week,
main="Density Plot by day of week",
xlab="intercal",
layout=c(1, 2))
# kernel density plots by factor level
densityplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
main="Density Plot by day of week",
xlab="intercal",
layout=c(1, 2))
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
source('~/Documents/Coursera/Reproducible Research/Project_week3_code.R', echo=TRUE)
# kernel density plots by factor level
densityplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
main="Density Plot by day of week",
#xlab="intercal",
layout=c(1, 2))
# kernel density plots by factor level
densityplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
#main="Density Plot by day of week",
#xlab="intercal",
layout=c(1, 2))
# kernel density plots by factor level
xyplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
#main="Density Plot by day of week",
#xlab="intercal",
layout=c(1, 2))
# kernel density plots by factor level
xyplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
#main="Density Plot by day of week",
#xlab="intercal",
layout=c(1, 2),
type='b')
# kernel density plots by factor level
xyplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
#main="Density Plot by day of week",
#xlab="intercal",
layout=c(1, 2),
type='l')
# kernel density plots by factor level
xyplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
main="Density Plot by day of week",
xlab="intercal",
layout=c(1, 2),
type='l')
# kernel density plots by factor level
xyplot(df_wo_na$steps~df_wo_na$interval|df_wo_na$day_of_week,
main="Time Series Plot by day of week",
xlab="interval",
ylab="Steps",
layout=c(1, 2),
type='l')
setwd("~/Desktop/Projects/RepData_PeerAssessment1")
